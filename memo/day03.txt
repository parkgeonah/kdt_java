day 03(JAVA 1일차)
git 실습 정리 -> git 명령어 -> java란 -> java 설치(jdk17, 이클립스)


1. git 명령어
	git clone url주소 폴더경로
	git init 
	git add . or 파일명
	git rm --cached 파일 명
	git commit -m "커밋 메시지"
	git branch 
	git branch -m 기존브런치명 변경할브런치명
	git branch 브런치명
	git branch -D 삭제할브런치명
	git remote -v 
	git remote add 원격주소이름 주소
	git remote ste-url 원격주소이름 주소
	git remote remove 원격주소이름
	git remote rename 기존원격주소이름 변경할원격주소이름
	git switch 이동할브런치명
	git merge 병합할브런치명
	git log
	git checkout 체크섬 or -
	git push 원격주소이름 브런치명
	git pull 원격주소이름 브런치명
	git pull 원격주소이름 브런치명 --allow-unrelated-histories
	
	echo "내용" > 파일명.txt
	ls -al 현재 폴더의 파일 목록 확인
	
2. java
1) 컴퓨터
	마우스, 키보드, 모니터, 하드웨어, 하드디스크, cpu, 그래픽카드, 메인보드
	ssd, hd, RAM, 파워, 게임, 인터넷, 계산기, 워드, 메모장, ...

	하드웨어(HW) : 모니터, 마우스, 하드디스크, cpu, 그래픽카드, 메인보드
	소프트웨어(SW) : 인터넷, 게임, 계산기, 워드, 메모장, 카카오톡...

	컴퓨터 = 하드웨어 + 소프트웨어

2) 컴퓨터 언어
	저급언어: 컴퓨터가 이해하기 쉬운 언어
		기계어, 어셈블리어
		배우기어렵고 유지보수가 힘듦
		실행속도가 매우 빠름

	고급언어: 사람이 이해하기 쉬운 언어
		java, python, c++
		일상언어에서 사용하는 표현을 그대로 가져다 쓸 수 있음
		이식성이 높음(운영체제에 따른 영향을 받지 않는다) 
		
3) 번역 프로그램
	저급언어 --- 번역프로그램 --- 고급언어
		컴파일러	: JAVA	
		인터프리터 : Javascript, Python, ..

4) Java 
Java 
	프로그래밍 언어
 
프로그래밍 언어
	개발자와 컴퓨터가 소통하기 위한 언어

소스코드
	컴퓨터와 개발자가 소통할 수 있는 언어로 작성해 둔 것

컴파일러
	컴파일 작업을 해주는 번역기

컴파일
	사람의 언어를 컴퓨터의 언어로 번역해주는 작업

5) 프로그램의 동작원리
	<일반 프로그램>		<JAVA 프로그램>
	프로그램			프로그램
					JVM
	운영체제(OS)		운영체제(OS)
	하드웨어			하드웨어

	일반프로그램이 실행 -> 프로그램을 구성하는 명령어와 데이터가 운영체제에 의해 메모리(RAM)에 적재
	-> 프로그램이 메모리에 적재되어 실행중인 상태(프로세스) -> CPU가 메모리에 있는 exe파일 해석 및 실행

- JVM(Java Vitual Machine)
	운영체제에 맞춰서 java로 만든 프로그램을 실행시켜준다

	javac: .java파일(사람의 언어로 된 파일) 컴파일
	java: .class(컴퓨터 언어로 된 파일) 실행

	작성한 소스코드는 .java 파일로 만들어짐 -> 자바 컴파일러가 .class 파일로 변환(java bytecode)
	-> JVM이 OS(운영체제)r가 bytecode를 이해할 수 잇도록 도와줌
	자바 컴파일러는 jdk를 설치하면 bin폴더에 존재하는 javac.exe 파일을 의미한다


- JRE(Java Runtime Enviroment)
	JVM을 실행한다
	JVM을 실행할 때 필요한 라이브러리 파일 등을 가지고있다

- JDK(Jaba Development Kit)
	JRE을 포함
	JRE 외에 개발에 필요한 도구들을 가지고 있다

3. JDK설치
1) JDK 설치 확인 방법
	windows + r > cmd
	java -version
	javac -version

2) JDK 설치
	구글 검색창에 JDK17 검색 > 제일 상단의 오라클 홈페이지 접속
	> windows x64 Installer exe 파일 다운로드
	> mac m1 칩 Arm64 DMG Installer 파일 다운로드
	> 설치 프로그램 실행 > 설치 경로 중에 Program Files 경로 제거(C:\java\)

	설치완료 후 cmd > java -version
			jiva -version

3) IDE(통합 개발 환경)
- 이클립스 설치
	https://www.eclipse.org/downloads/packages/release
	상단 링크로 접속 > 원하는 버전 클릭(2024.12) > Eclipse IDE for Enterprise Java and Web Developers(톱니바퀴)
	
	※ 압축 풀 때 반디집으로 압출풀기!! (기본 윈도우 압축풀기하면 오류남)

- 이클립스 설정(window > preferences)
	글씨체 변경
	font 검색 > Colors and Fonts 클릭 > Basic - Text Font 클릭하고 Edit 클릭 > 원하는 글꼴과 크기 설정 > Apply
	
	인코딩 타입 변경
	enc 검색 > Workspace 클릭 > Text file encoding > Other UTF-8 설정된 것 확인

	컴파일러 변경
	compiler 검색 > level 21에서 17로 변경(JDK 버전에 맞게 변경) > Apply

	관점 변경
	perspective 검색 > 기본적으로 java EE로 되어있음 > JAVA로 변경 Apply and Close

4. 자바의 구성요소
	자바 프로젝트 > 패키지 > 클래스 > 메소드

	* 클래스는 앞글자가 대문자!!!
	* 메소드는 이름 뒤에 소괄호()가 온다
	
	세미콜론;
		자바에서는 세미콜론으로(;)으로 문장의 끝을 표시한다

	중괄호{}
		자바에서는 중괄호{}로 영역을 표시한다

	들여쓰기
		자바에서는 들여쓰기가 코드에 영향을 주지 않는다
		가독성을 높이기 위해 사용한다

	콘솔
		사용자와 운영체제가 소통한 결과를 나타내는 창 

	주석 
		프로그램 실행에 영향을 끼치지 않는다
		개발자간의 소통 -> 소스코드에 대한 설명글을 작성할 때
		지금 당장 사용하지 않는 코드가 있을 때 
		※ 모든 코드 해석을 할 때 주석을 사용한다
		// 한줄주석
		/* */ 범위주석
		/** */ API 주석

5. 이클립스 단축키(윈도우)
	ctrl + n : 새로운 파일 생성(프로젝트, 패키지, 클래스)
	ctrl + s : 저장
	ctrl + F11 : 실행
	F2 : 파일 이름 변경
	main + ctrl + space bar : main 메소드 자동 생성
	syso + ctrl + space bar : 출력 메소드 자동 생성
	ctrl + / : 한줄 주석
